{"mappings":"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","sources":["src/modules/_constants.js","src/modules/audioUtils.js","src/modules/game.js","src/modules/eventHandlers.js","src/index.js"],"sourcesContent":["export const intervalMs = 2200;\n\nexport const getBloomName = () => {\n\tconst bloomNames = ['bloom1', 'bloom2', 'bloom3', 'bloom4', 'bloom5'];\n\tconst idx = Math.floor(Math.random() * 6);\n\treturn bloomNames[idx];\n};\n\nexport const buttons = {\n\tplay: document.getElementById('play'),\n\tclear: document.getElementById('clear'),\n\tsound: document.getElementById('sound')\n};\n\n// -- Audio  --\nexport const defaultVolNature = 0.2;\nexport const audio = {\n\tnature: document.getElementById('audioPlayer'),\n\tfire: document.getElementById('fireAudioPlayer')\n}\n\n// -- Board State --\nexport const boardState = {\n\tdimension: window.innerWidth > 414 ? 18 : 12,\n\tinterval: null,\n\tcells: {},\n\tplaying: false,\n\tisClear: true\n};\n","import { audio, defaultVolNature, boardState } from './_constants';\n\nconst maxVol = 0.6;\n\nconst getVolumeNature = (volumeFire) => {\n\treturn volumeFire ? \n\t\tmaxVol - volumeFire + defaultVolNature : \n\t\tdefaultVolNature * 2;\n}\n\nconst getVolumeFire = (deadCount) => {\n\tif (!deadCount) return 0;\n\n\tconst numTotalCells = boardState.dimension * 2;\n\tconst deadCountAdjusted = deadCount + 100;\n\t\n\tconst volumeFire = deadCountAdjusted ? deadCountAdjusted / numTotalCells * 0.1 : 0;\n\treturn volumeFire > maxVol ? maxVol : volumeFire;\n}\n\nexport const setVolume = (deadCount) => {\n\tconst volumeFire = getVolumeFire(deadCount);\n\tconst volumeNature = getVolumeNature(volumeFire);\n\n\taudio.fire.volume = volumeFire;\n\taudio.nature.volume = volumeNature;\n}\n","import { boardState, getBloomName } from './_constants';\nimport { setVolume } from './audioUtils';\n\n// Set next state for the entire board\nexport const setNextState = (nextBoardState) => {\n\tlet deadCount = 0;\n\tlet cell;\n\n\tfor (const cellId in nextBoardState) {\n\t\tconst currCellState = boardState.cells[cellId];\n\t\tconst nextCellState = nextBoardState[cellId];\n\n\t\tconst cellWillDie = nextCellState === 'dead';\n\n\t\tif (!cellWillDie && currCellState !== nextCellState) {\n\t\t\tcell = document.getElementById(cellId);\n\t\t\tcell.className = nextCellState; \n\n\t\t\tif (nextCellState === 'alive') {\n\t\t\t\tcell.classList.add(getBloomName());\n\t\t\t}\n\n\t\t} else if (cellWillDie) {\n\t\t\tcell = document.getElementById(cellId);\n\t\t\tcell.className = nextCellState; \n\n\t\t\tif (currCellState === 'dead') {\n\t\t\t\tcell.classList.remove('dying');\n\t\t\t\tcell.classList.add('gone');\n\t\t\t} else {\n\t\t\t\tcell.classList.add('dying');\n\t\t\t\tdeadCount++;\n\t\t\t}\n\n\t\t}\n\n\t\tboardState.cells[cellId] = nextCellState;\n\t}\n\n\tsetVolume(deadCount);\n};\n\nconst getLiveNeighbors = (neighborhood) => {\n\treturn neighborhood.filter(id => {\n\t\tconst neighbor = boardState.cells[id];\n\t\treturn neighbor === 'alive';\n\t});\n}\n\nconst getNeighborhood = (x, y) => {\n\t\n\tlet neighborhood = [];\n\n\tfor (let row = x - 1; row <= x + 1; row++) {\n\t\tfor (let col = y - 1; col <= y + 1; col++) {\n\n\t\t\tconst isInBounds = \n\t\t\t\t\trow >= 0 && // x\n\t\t\t\t\tcol >= 0 && // y\n\t\t\t\t\trow < boardState.dimension &&\n\t\t\t\t\tcol < boardState.dimension;\n\n\t\t\tconst isSelf = (col === x && row === y);\n\n\t\t\tif (isInBounds && !isSelf) {\n\t\t\t\tneighborhood.push(`${row}-${col}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn neighborhood;\n};\n\n// Determine next state for a single cell, based on numbr of live neighbors\nexport const getCellNextState = (cellId) => {\n\tconst coords = cellId.split('-');\n\tconst neighborhood = getNeighborhood(+coords[0], +coords[1]);\n\tconst numLiveNeighbors = getLiveNeighbors(neighborhood).length;\n\tconst currCellState = boardState.cells[cellId];\n\n\tlet nextCellState = currCellState;\n\n\tif (currCellState === 'alive') {\n\t\tif (numLiveNeighbors < 2 || numLiveNeighbors > 3) {\n\t\t\tnextCellState = 'dead';\n\t\t} \n\t} else {\n\t \tif (numLiveNeighbors === 3) {\n\t\t\tnextCellState = 'alive';\n\t\t}\n\t}\n\n\treturn nextCellState;\n};\n\n// Step is a single iteration of the game\nexport const step = () => {\n\tconst boardNextState = {...boardState.cells};\n\n\tfor (const cellId in boardState.cells) {\n\t\tconst cellNextState = getCellNextState(cellId);\n\t\tboardNextState[cellId] = cellNextState;\n\t}\n\n\n\tsetNextState(boardNextState);\n};\n\n","import { audio, defaultVolNature, intervalMs, buttons, boardState } from './_constants';\nimport { getCellNextState, setNextState, step } from './game';\n\n// Start/Stop Game\nconst genesis = (cellId) => {\n\tconst coords = cellId.split('-');\n\tconst x = +coords[0];\n\tconst y = +coords[1];\n\n\tconst lifeForce = Math.floor((x + y) * Math.random()) % 4 === 0;\n\treturn lifeForce ? 'alive' : 'dormant';\n};\n\nexport const togglePlay = () => {\n\n\tif (!boardState.playing) {\n\t\tconst nextBoardState = {...boardState.cells};\n\n\t\tfor (const cellId in nextBoardState) {\n\t\t\tif (boardState.isClear) {\n\t\t\t\tnextBoardState[cellId] = genesis(cellId);\n\t\t\t} else {\n\t\t\t\tnextBoardState[cellId] = getCellNextState(cellId);\n\t\t\t}\n\t\t}\n\n\t\tsetNextState(nextBoardState);\n\n\t\tbuttons.play.innerHTML = 'Pause';\n\t\tboardState.playing = true;\n\t\tboardState.isClear = false;\n\t\tboardState.interval = setInterval(step, intervalMs);\n\n\t} else {\n\t\tclearInterval(boardState.interval);\n\t\t\n\t\tbuttons.play.innerHTML = 'Play' ;\n\t\tboardState.playing = false;\n\t\tboardState.interval = null;\n\t}\n};\n\n// Clear Board\nexport const clearBoard = () => {\n\tconst nextBoardState = {...boardState.cells};\n\tfor (const cellId in nextBoardState) {\n\t\tnextBoardState[cellId] = 'dormant';\n\t}\n\n\tsetNextState(nextBoardState);\n\tclearInterval(boardState.interval);\n\n\taudio.nature.volume = defaultVolNature;\n\taudio.fire.volume = 0;\n\n\tbuttons.play.innerHTML = 'Play';\n\tboardState.playing = false;\n\tboardState.isClear = true;\n\tboardState.interval = null;\n};\n\n// Toggle Audio\nlet soundOn = false;\nexport const toggleSound = () => {\n\tif (soundOn) {\n\t\taudio.nature.pause();\n\t\taudio.fire.pause();\n\t\tbuttons.sound.classList.add('off');\n\t\tbuttons.sound.setAttribute('aria-label', 'sound on');\n\t\tsoundOn = false;\n\t} else {\n\t\taudio.nature.play();\n\t\taudio.fire.play();\n\t\tbuttons.sound.classList.remove('off');\n\t\tbuttons.sound.setAttribute('aria-label', 'sound off');\n\t\tsoundOn = true;\n\t}\n};\n","import { \n\taudio,\n\tdefaultVolNature, \n\tbuttons, \n\tboardState \n} from './modules/_constants';\n\nimport { \n\ttogglePlay, \n\tclearBoard, \n\ttoggleSound \n\t} from './modules/eventHandlers.js';\n\t\nconst initAudio = () => {\n\taudio.nature.volume = defaultVolNature;\n\taudio.fire.volume = 0;\n};\n\nconst initButtons = () => {\n\tbuttons.play.addEventListener('click', () => togglePlay());\n\tbuttons.clear.addEventListener('click', () => clearBoard());\n\tbuttons.sound.addEventListener('click', () => toggleSound());\n};\n\nconst initBoard = () => {\n\tconsole.log('boardState: ', boardState)\n\tconst board = document.getElementById('board');\n\n\tfor (let x = 0; x < boardState.dimension; x++) {\n\t\tconst row = document.createElement('div');\n\t\trow.className = 'row';\n\t\trow.id = x;\n\t\tboard.appendChild(row);\n\n\t\tfor (let y = 0; y < boardState.dimension; y++) {\n\t\t\tconst cellId = `${x}-${y}`;\n\t\t\tboardState.cells[cellId] = 'dormant';\n\n\t\t\tconst cell = document.createElement('div');\n\t\t\tcell.id = cellId;\n\t\t\tcell.classList.add('dormant');\n\t\t\trow.appendChild(cell);\n\t\t}\n\t}\n};\n\nconst initLife = () => {\n\tinitAudio();\n\tinitButtons();\n\tinitBoard();\n};\n\n/* START */\nif (document.readyState === 'loading') {\n\tdocument.onDOMContentLoaded = () => initLife();\n} else {\n\tinitLife();\n}"],"names":["$f89b689fdb00ae74$export$bbea856fdb3e3c5f","play","document","getElementById","clear","sound","$f89b689fdb00ae74$export$56fb23a07d29e1d0","$f89b689fdb00ae74$export$592b77e6034db746","nature","fire","$f89b689fdb00ae74$export$246a965c0e47c1d7","dimension","window","innerWidth","interval","cells","playing","isClear","$da71c1a8d9d97ebb$export$246e658b67178cb0","deadCount","volumeFire","deadCountAdjusted","$da71c1a8d9d97ebb$var$getVolumeFire","volumeNature","$da71c1a8d9d97ebb$var$getVolumeNature","volume","$efff50eca450a049$export$5a8b80f35baeb72c","nextBoardState","cell","cellId","currCellState","nextCellState","cellWillDie","className","classList","remove","add","Math","floor","random","$efff50eca450a049$export$7be33db26be4dcbb","coords","split","numLiveNeighbors","neighborhood","filter","id","$efff50eca450a049$var$getLiveNeighbors","x","y","row","col","push","$efff50eca450a049$var$getNeighborhood","length","$efff50eca450a049$export$35d34bc0ed591a92","boardNextState","cellNextState","$e9c0343aa1946cf6$var$genesis","$e9c0343aa1946cf6$export$5d1503cad977414a","clearInterval","innerHTML","setInterval","$e9c0343aa1946cf6$export$5930ab9ed0379f1c","$e9c0343aa1946cf6$var$soundOn","$35da740d59af89ba$var$initButtons","addEventListener","pause","setAttribute","$35da740d59af89ba$var$initLife","console","log","board","createElement","appendChild","$35da740d59af89ba$var$initBoard","readyState","onDOMContentLoaded"],"version":3,"file":"index.d9c6b36f.js.map"}