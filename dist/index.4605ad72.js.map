{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-58654a101dcb5c15.js","node_modules/@parcel/runtime-js/lib/runtime-eecb3529be6add48.js","node_modules/@parcel/runtime-js/lib/runtime-9789c9154a0515d9.js","node_modules/@parcel/runtime-js/lib/runtime-9a0ccb09c1a882bb.js","node_modules/@parcel/runtime-js/lib/runtime-057a10b7c078c06d.js","node_modules/@parcel/runtime-js/lib/runtime-39687e44fbfb3671.js","src/modules/constants.js","src/modules/audioUtils.js","src/modules/game.js","src/modules/eventHandlers.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9vqfN\\\":\\\"index.4605ad72.js\\\",\\\"2M7TJ\\\":\\\"bloom-1-1x.febed305.gif\\\",\\\"hfy9H\\\":\\\"bloom-2-1x.306acb87.gif\\\",\\\"bmNnK\\\":\\\"bloom-3-1x.7f5cc346.gif\\\",\\\"4LUYw\\\":\\\"bloom-4-1x.c4ae85af.gif\\\",\\\"5jKE5\\\":\\\"bloom-5-72px.db436b77.gif\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2M7TJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hfy9H\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bmNnK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4LUYw\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5jKE5\")).toString();","import bloom1 from '../images/bloom-1-1x.gif';\nimport bloom2 from '../images/bloom-2-1x.gif';\nimport bloom3 from '../images/bloom-3-1x.gif';\nimport bloom4 from '../images/bloom-4-1x.gif';\nimport bloom5 from '../images/bloom-5-72px.gif';\n\n// -- Interval --\nexport const intervalMs = 4000;\n\n// -- Cell Background Images --\nexport const blooms = [bloom1, bloom2, bloom3, bloom4, bloom5];\n\n// -- DOM Elements --\nexport const main = document.getElementById('main');\nexport const canvas = document.getElementById('canvas');\nexport const audioNature = document.getElementById('audioPlayer');\nexport const audioFire = document.getElementById('fireAudioPlayer');\n\n// -- Buttons --\nexport const playButton = document.getElementById('play');\nexport const clearButton = document.getElementById('clear');\nexport const soundButton = document.getElementById('sound');\n\n// -- Board State --\nexport const boardState = {\n\twidth: 18,\n\theight: 18,\n\tinterval: null,\n\tcells: {},\n\tplaying: false,\n\thasPlayed: false\n};\n","import { audioNature, audioFire, boardState } from './constants';\n\n/* SCROLL TO BOTTOM */\n\nconst getVolumeNature = (volumeFire) => {\n\t\n\tlet volumeNature;\n\n\tif (boardState.hasPlayed) {\n\t\tboardState.hasPlayed = !!boardState.hasPlayed\n\n\t\tvolumeNature = 0.5\n\t} else {\n\t\tvolumeNature = 1 - volumeFire;\n\t}\n\t\n\treturn volumeNature;\n}\n\nconst getVolumeFire = () => {\n\n\tlet volumeFire;\n\n\tconst numTotalCells = Object.keys(boardState.cells).length;\n\tconsole.log('total: ', numTotalCells)\n\tconst numDeadCells = Object.values(boardState.cells).filter(\n\t\tcell => cell === 'dead'\n\t).length;\n\tconst numDeadCellsAdjusted = numDeadCells + 70;                   \n\tconsole.log('adjusted: ', numDeadCellsAdjusted)\n\tconsole.log(numDeadCellsAdjusted / numTotalCells)\n\t\n\t\t\n\tvolumeFire = !volumeFire ? \n\t\t0 : \n\t\tnumDeadCellsAdjusted / numTotalCells;\n\tconsole.log('volumeFire: ', volumeFire)\n\n\treturn volumeFire;\n}\n\nexport const setVolume = () => {\n\tconst volumeFire = getVolumeFire()\n\tconsole.log(volumeFire)\n\tconst volumeNature = getVolumeNature(volumeFire)\n\n\taudioFire.volume = volumeFire;\n\taudioNature.volume = volumeNature;\n}\n","import { blooms, boardState } from './constants';\nimport { setVolume } from './audioUtils';\n\n// Get individual cell from document\nconst getCell = (row, col) => {\n\tlet theCell = document.getElementById(`${col}-${row}`);\n\tif (!theCell) return null\n\ttheCell.xCoord = col;\n\ttheCell.yCoord = row;\n\treturn theCell\n};\n\n// Execute iterator function on each cell\nexport const forEachCell = (iteratorFunc) => {\n\tfor (let col = 0; col < boardState.width; col++) {\n\t\tfor (let row = 0; row < boardState.height; row++) {\n\t\t\tlet theCell = getCell(row, col)\n\t\t\titeratorFunc(theCell, row, col)\n\t\t}\n\t}\n};\n\n// Get neighboring cells for a single cell\nconst getNeighborhood = (cell, row, col) => {\n\tlet neighborIds = [];\n\tfor (let i = col - 1; i <= col + 1; i++) {\n\t\tfor (let j = row - 1; j <= row + 1; j++) {\n\t\t\tif (i !== col || j !== row) {\n\t\t\t\tif (i > -1 && j > -1) {\n\t\t\t\t\tlet neighborId = i + '-' + j;\n\t\t\t\t\tif (neighborId) neighborIds.push(neighborId)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn neighborIds;\n};\n\n// Get number of living neighbors for a single cell\nconst countLiveNeighbors = (neighborIds) => {\n\tlet liveNeighbors = 0\n\tneighborIds.map(id => {\n\t\treturn document.getElementById(id)\n\t}).forEach(neighbor => {\n\t\tif (neighbor && neighbor.classList.contains('alive')) {\n\t\t\tliveNeighbors++\n\t\t}\n\t})\n\treturn liveNeighbors;\n};\n\n// Determine next state for a single cell, based on numbr of live neighbors\nconst getNextState = (cell, row, col) => {\n\tlet neighborhood = getNeighborhood(cell, row, col);\n\n\tlet liveNeighbors = countLiveNeighbors(neighborhood);\n\n\tlet status = cell.classList;\n\n\tif (status.contains('alive')) {\n\t\tif (liveNeighbors < 2 || liveNeighbors > 3) return 'dead';\n\t\telse return status\n\t} else {\n\t\tif (liveNeighbors === 3) return 'alive';\n\t\telse return 'dormant'\n\t}\n};\n\n// Set new bloom gif for each live cell\nconst getBloom = () => {\n\tlet idx = Math.floor(Math.random() * 5)\n\treturn blooms[idx]\n}\n\n// Set next state for the entire board\nexport const setNextState = (nextBoardState) => {\n\tfor (let cellId in nextBoardState) {\n\t\tif (nextBoardState.hasOwnProperty(cellId)) {\n\t\t\tlet nextCellState = nextBoardState[cellId]\n\t\t\tboardState.cells[cellId] = nextCellState\n\t\t\tlet cell = document.getElementById(cellId)\n\t\t\tcell.className = nextCellState\n\t\t\tif (cell.className === 'alive') {\n\t\t\t\tcell.querySelector('img').src = getBloom();\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log('setting')\n\tsetVolume()\n};\n\n// Step is a single iteration of the game\nexport const step = () => {\n\tlet nextBoardState = Object.assign({}, boardState.cells)\n\tforEachCell((cell, row, col) => {\n\t\tnextBoardState[`${col}-${row}`] = getNextState(cell, row, col)\n\t})\n\n\tsetNextState(nextBoardState);\n};\n\n","import { audioNature, audioFire, intervalMs,  playButton, soundButton, boardState } from './constants';\nimport { forEachCell, setNextState, step } from './game';\n\n// Start game play\nexport const togglePlay = () => {\n\tif (!boardState.playing) {\n\t\tlet nextBoardState = Object.assign({}, boardState.cells)\n\n\t\tforEachCell((cell, row, col) => {\n\t\t\tif (Math.floor((row + col) * Math.random()) % 5 === 0) {\n\t\t\t\tnextBoardState[`${col}-${row}`] = 'alive'\n\t\t\t}\n\t\t})\n\t\tsetNextState(nextBoardState)\n\n\t\tplayButton.innerHTML = 'Pause'\n\t\tboardState.playing = true;\n\t\tboardState.interval = setInterval(step, intervalMs)\n\t} else {\n\t\tclearInterval(boardState.interval);\n\t\tboardState.interval = null;\n\t\tplayButton.innerHTML = 'Play'\n\t\tboardState.playing = false;\n\n\t}\n};\n\n// Clear board\nexport const clearBoard = () => {\n\tlet nextBoardState = Object.assign({}, boardState.cells);\n\n\tforEachCell((cell, row, col) => {\n\t\tnextBoardState[`${col}-${row}`] = 'dormant'\n\t});\n\n\tsetNextState(nextBoardState);\n\tclearInterval(boardState.interval)\n\tboardState.interval = null;\n\tboardState.playing = false;\n\tplayButton.innerHTML = 'Play'\n\n\taudioNature.volume = 0.3;\n\tboardState.firstPlay = false;\n};\n\n// Toggle Audio\nlet soundOn = false;\nexport const toggleSound = (evt) => {\n\tif (soundOn) {\n\t\taudioNature.pause();\n\t\taudioFire.pause();\n\t\tsoundButton.classList.add('off');\n\t\tsoundOn = false;\n\t} else {\n\t\taudioNature.play();\n\t\taudioFire.play();\n\t\tsoundButton.classList.remove('off')\n\t\tsoundOn = true;\n\t}\n};\n","import { main, audioNature, audioFire, playButton, clearButton, soundButton, boardState } from './modules/constants';\nimport { togglePlay, clearBoard, toggleSound } from './modules/eventHandlers.js'\n\n// -- Buttons --\nconst initButtons = () => {\n\tplayButton.addEventListener('click', () => togglePlay());\n\tclearButton.addEventListener('click', () => clearBoard());\n\tsoundButton.addEventListener('click', () => toggleSound());\n}\n\nconst initAudio = () => {\n\taudioNature.volume = 0.3;\n\taudioFire.volume = 0;\n}\n\n// -- Initital Board Set-Up --\nconst createAndShowBoard = () => {\n\tconst board = document.createElement('tbody');\n\tmain.appendChild(board);\n\n\tfor (let i = 0; i < boardState.width; i++) {\n\t\tlet row = document.createElement('tr');\n\t\tboard.appendChild(row);\n\n\t\tfor (let j = 0; j < boardState.height; j++) {\n\t\t\tboardState.cells[`${i}-${j}`] = 'dormant'\n\t\t\tlet cell = document.createElement('td');\n\t\t\tlet img = document.createElement('img');\n\t\t\tcell.id = `${i}-${j}`\n\t\t\tcell.className = 'dormant'\n\t\t\tcell.appendChild(img);\n\t\t\trow.appendChild(cell);\n\t\t}\n\t}\t\n}\n\ninitButtons();\ninitAudio();\ncreateAndShowBoard();\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$fceb4dc7d38fcc4a$exports","URL","resolve","import","meta","url","toString","$99de808b66a12583$exports","$8c0dc67eacd45c96$exports","$5755888be7241277$exports","$1f1d55ac1d688098$exports","$45af14c00f07ca1e$export$aad344b54aa4bfdb","$parcel$interopDefault","$45af14c00f07ca1e$export$f22da7240b7add18","document","getElementById","$45af14c00f07ca1e$export$2ed63aa32d940c99","$45af14c00f07ca1e$export$c5c31639bb70d955","$45af14c00f07ca1e$export$73e4574fc43cf3a2","$45af14c00f07ca1e$export$52aab205873de00","$45af14c00f07ca1e$export$1c8774b7a39851e7","$45af14c00f07ca1e$export$246a965c0e47c1d7","width","height","interval","cells","playing","hasPlayed","$da71c1a8d9d97ebb$export$246e658b67178cb0","volumeFire","numTotalCells","console","log","numDeadCellsAdjusted","values","filter","cell","$da71c1a8d9d97ebb$var$getVolumeFire","volumeNature","$da71c1a8d9d97ebb$var$getVolumeNature","volume","$efff50eca450a049$var$getCell","row","col","theCell","xCoord","yCoord","$efff50eca450a049$export$5b3a99d9c5ab85dd","iteratorFunc","$efff50eca450a049$var$getNextState","neighborhood","neighborIds","j","neighborId","push","$efff50eca450a049$var$getNeighborhood","liveNeighbors","map","forEach","neighbor","classList","contains","$efff50eca450a049$var$countLiveNeighbors","status","$efff50eca450a049$var$getBloom","idx","Math","floor","random","$efff50eca450a049$export$5a8b80f35baeb72c","nextBoardState","cellId","hasOwnProperty","nextCellState","className","querySelector","src","$efff50eca450a049$export$35d34bc0ed591a92","assign","$e9c0343aa1946cf6$var$soundOn","addEventListener","clearInterval","innerHTML","setInterval","firstPlay","pause","add","play","remove","board","createElement","appendChild","img","$35da740d59af89ba$var$createAndShowBoard"],"version":3,"file":"index.4605ad72.js.map"}